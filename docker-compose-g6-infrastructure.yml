# Docker Compose for ScrollIntel-G6 Core Infrastructure
version: '3.8'

services:
  # Redis Cluster for Distributed Storage
  redis-node-1:
    image: redis:7-alpine
    container_name: scrollintel-redis-1
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 6379
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - redis-1-data:/data
    networks:
      - scrollintel-g6

  redis-node-2:
    image: redis:7-alpine
    container_name: scrollintel-redis-2
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 6379
    ports:
      - "6380:6379"
      - "16380:16379"
    volumes:
      - redis-2-data:/data
    networks:
      - scrollintel-g6

  redis-node-3:
    image: redis:7-alpine
    container_name: scrollintel-redis-3
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 6379
    ports:
      - "6381:6379"
      - "16381:16379"
    volumes:
      - redis-3-data:/data
    networks:
      - scrollintel-g6

  # PostgreSQL for Data Product Registry
  postgres:
    image: postgres:15-alpine
    container_name: scrollintel-postgres
    environment:
      POSTGRES_DB: scrollintel_g6
      POSTGRES_USER: scrollintel
      POSTGRES_PASSWORD: scrollintel_secure_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - scrollintel-g6

  # Neo4j for Data Lineage Graph
  neo4j:
    image: neo4j:5-community
    container_name: scrollintel-neo4j
    environment:
      NEO4J_AUTH: neo4j/scrollintel_graph_pass
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - scrollintel-g6

  # Elasticsearch for Search and Discovery
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: scrollintel-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - scrollintel-g6

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: scrollintel-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-g6.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules_g6.yml:/etc/prometheus/alert_rules_g6.yml
      - prometheus-data:/prometheus
    networks:
      - scrollintel-g6

  # Grafana for Monitoring Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: scrollintel-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=scrollintel_admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboard-g6.json:/etc/grafana/provisioning/dashboards/scrollintel-g6.json
    networks:
      - scrollintel-g6
    depends_on:
      - prometheus

  # AlertManager for Alert Handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: scrollintel-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    networks:
      - scrollintel-g6

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: scrollintel-node-exporter
    command:
      - '--path.rootfs=/host'
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - scrollintel-g6

  # Postgres Exporter for Database Metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: scrollintel-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://scrollintel:scrollintel_secure_pass@postgres:5432/scrollintel_g6?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - scrollintel-g6
    depends_on:
      - postgres

  # Redis Exporter for Cache Metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: scrollintel-redis-exporter
    environment:
      REDIS_ADDR: "redis://redis-node-1:6379"
    ports:
      - "9121:9121"
    networks:
      - scrollintel-g6
    depends_on:
      - redis-node-1

  # Elasticsearch Exporter
  elasticsearch-exporter:
    image: prometheuscommunity/elasticsearch-exporter:latest
    container_name: scrollintel-elasticsearch-exporter
    command:
      - '--es.uri=http://elasticsearch:9200'
    ports:
      - "9114:9114"
    networks:
      - scrollintel-g6
    depends_on:
      - elasticsearch

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: scrollintel-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - scrollintel-g6

networks:
  scrollintel-g6:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-1-data:
  redis-2-data:
  redis-3-data:
  postgres-data:
  neo4j-data:
  neo4j-logs:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
  alertmanager-data: