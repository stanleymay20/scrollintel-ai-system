apiVersion: v1
kind: Secret
metadata:
  name: agent-steering-secrets
  namespace: agent-steering-system
type: Opaque
stringData:
  # Database Credentials
  DATABASE_USER: "agent_steering_user"
  DATABASE_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  DATABASE_URL: "postgresql://agent_steering_user:CHANGE_ME_IN_PRODUCTION@postgresql-service:5432/agent_steering"
  
  # Redis Password
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  REDIS_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis-service:6379/0"
  
  # JWT Keys
  JWT_SECRET_KEY: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_KEY"
  JWT_PRIVATE_KEY: |
    -----BEGIN RSA PRIVATE KEY-----
    # Generate with: openssl genrsa -out private.pem 2048
    # REPLACE WITH ACTUAL PRIVATE KEY IN PRODUCTION
    -----END RSA PRIVATE KEY-----
  JWT_PUBLIC_KEY: |
    -----BEGIN PUBLIC KEY-----
    # Generate with: openssl rsa -in private.pem -pubout -out public.pem
    # REPLACE WITH ACTUAL PUBLIC KEY IN PRODUCTION
    -----END PUBLIC KEY-----
  
  # API Keys for External Services
  OPENAI_API_KEY: "CHANGE_ME_IN_PRODUCTION"
  ANTHROPIC_API_KEY: "CHANGE_ME_IN_PRODUCTION"
  
  # Encryption Keys
  ENCRYPTION_KEY: "CHANGE_ME_IN_PRODUCTION_32_CHAR_KEY"
  
  # Monitoring Credentials
  GRAFANA_ADMIN_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  PROMETHEUS_BASIC_AUTH: "CHANGE_ME_IN_PRODUCTION"
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: agent-steering-system
type: kubernetes.io/tls
data:
  # Generate with: kubectl create secret tls tls-secret --cert=path/to/tls.crt --key=path/to/tls.key
  tls.crt: LS0tLS1CRUdJTi... # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Base64 encoded private key