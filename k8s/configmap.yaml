apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-steering-config
  namespace: agent-steering-system
data:
  # Database Configuration
  DATABASE_HOST: "postgresql-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "agent_steering"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Kafka Configuration
  KAFKA_BROKERS: "kafka-service:9092"
  
  # Monitoring Configuration
  PROMETHEUS_URL: "http://prometheus-service:9090"
  GRAFANA_URL: "http://grafana-service:3000"
  
  # Application Configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  MAX_WORKERS: "10"
  AGENT_REGISTRY_TTL: "300"
  
  # Security Configuration
  JWT_ALGORITHM: "RS256"
  SESSION_TIMEOUT: "3600"
  
  # Performance Configuration
  CACHE_TTL: "300"
  MAX_CONCURRENT_TASKS: "1000"
  CIRCUIT_BREAKER_THRESHOLD: "5"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: agent-steering-system
data:
  nginx.conf: |
    upstream agent_steering_backend {
        least_conn;
        server orchestration-service:8080 max_fails=3 fail_timeout=30s;
        server intelligence-service:8081 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://agent_steering_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_timeout 60s;
            proxy_connect_timeout 10s;
        }
        
        location /metrics {
            proxy_pass http://agent_steering_backend/metrics;
            allow 10.0.0.0/8;
            deny all;
        }
    }