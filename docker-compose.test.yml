version: '3.8'

services:
  scrollintel-test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/scrollintel_test
      - REDIS_URL=redis://redis:6379/0
      - TESTING=true
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./tests:/app/tests
      - ./test_reports:/app/test_reports
    command: >
      sh -c "
        python -m pytest tests/integration/ -v --tb=short
        --cov=scrollintel --cov-report=xml --cov-report=html
        --json-report --json-report-file=test_reports/integration_report.json
      "
    networks:
      - test-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=scrollintel_test
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  redis:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Performance testing service
  performance-test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/scrollintel_test
      - REDIS_URL=redis://redis:6379/0
      - TESTING=true
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "
        python -m pytest tests/integration/test_performance.py -v
        --timeout=900 --tb=short
      "
    networks:
      - test-network

  # Security testing service
  security-test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/scrollintel_test
      - REDIS_URL=redis://redis:6379/0
      - TESTING=true
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "
        python -m pytest tests/integration/test_security_penetration.py -v
        --tb=short
      "
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres_test_data:
  redis_test_data: