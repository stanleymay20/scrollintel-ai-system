apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-data-readiness-app
  namespace: ai-data-readiness
  labels:
    app: ai-data-readiness
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-data-readiness
  template:
    metadata:
      labels:
        app: ai-data-readiness
    spec:
      containers:
      - name: ai-data-readiness
        image: ai-data-readiness:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: ai-data-readiness-config
        - secretRef:
            name: ai-data-readiness-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: ai-data-readiness-service
  namespace: ai-data-readiness
spec:
  selector:
    app: ai-data-readiness
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-data-readiness-ingress
  namespace: ai-data-readiness
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - ai-data-readiness.example.com
    secretName: ai-data-readiness-tls
  rules:
  - host: ai-data-readiness.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-data-readiness-service
            port:
              number: 80