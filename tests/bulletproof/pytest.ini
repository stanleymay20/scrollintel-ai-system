[tool:pytest]
# Pytest configuration for bulletproof testing framework

# Test discovery
testpaths = tests/bulletproof
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Markers
markers =
    chaos: Chaos engineering tests that inject failures
    journey: User journey tests under failure conditions
    performance: Performance tests with degradation scenarios
    recovery: Automated recovery tests with success verification
    integration: Integration tests across multiple components
    slow: Tests that take longer to run (>30 seconds)
    critical: Critical tests that must pass for system validation

# Test output
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10

# Timeout settings
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test_results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:asyncio

# Minimum version
minversion = 6.0

# Test collection
collect_ignore =
    setup.py
    conftest.py